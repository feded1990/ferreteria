package Interfaz;

import BaseDatos.DB;
import Funcionalidad.Articulo;
import Funcionalidad.TablaUtils;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CompraInicial extends javax.swing.JFrame {

    DB db = new DB();
    ResultSet resultSet;
    List<String> columnas = new ArrayList<>(Arrays.asList("Codigo", "Nombre", "Precio", "Cantidad"));
    
    public CompraInicial() {
        setUndecorated(true);
        initComponents();
        setLocationRelativeTo(null);
        recargarTabla();
    }

    public CompraInicial(DefaultTableModel modeloTabla) {
        setUndecorated(true);
        initComponents();
        setLocationRelativeTo(null);
        recargarTabla();
        
        DefaultTableModel modeloTabla2 = new DefaultTableModel();
        modeloTabla2.addColumn("Codigo");
        modeloTabla2.addColumn("Nombre");
        modeloTabla2.addColumn("Precio");
        modeloTabla2.addColumn("Cantidad");
        tablaArticulosAgregados.setModel(modeloTabla2);
        
        tablaArticulosAgregados.setModel(modeloTabla);
        float total,totalAcumulado=0;
        for(int c=0;c<tablaArticulosAgregados.getRowCount();c++){
            total = Float.parseFloat(tablaArticulosAgregados.getValueAt(c, 2).toString());
            totalAcumulado = totalAcumulado + total;
        }
        textoMontoTotal.setText(String.valueOf(totalAcumulado));
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new org.edisoncor.gui.panel.Panel();
        jLabel1 = new javax.swing.JLabel();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaArticulosAgregados = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        botonAgregar = new javax.swing.JButton();
        textoNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        botonSiguiente = new javax.swing.JButton();
        botonQuitar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        textoMontoTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaArticuloDisponibles = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nueva Compra");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(248, 248, 248))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/fondo.jpg"))); // NOI18N

        tablaArticulosAgregados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Precio", "Cantidad"
            }
        ));
        tablaArticulosAgregados.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaArticulosAgregados);

        botonAgregar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        textoNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        textoNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textoNombreKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Filtrar por nombre de articulo:");

        botonSiguiente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonSiguiente.setText("Siguiente");
        botonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSiguienteActionPerformed(evt);
            }
        });

        botonQuitar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonQuitar.setText("Quitar");
        botonQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonQuitarActionPerformed(evt);
            }
        });

        botonCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Monto Total:");

        tablaArticuloDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Precio", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaArticuloDisponibles.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tablaArticuloDisponibles);

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelImage1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelImage1Layout.createSequentialGroup()
                        .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textoNombre)
                            .addComponent(jScrollPane1)
                            .addGroup(panelImage1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(textoMontoTotal))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImage1Layout.createSequentialGroup()
                                .addComponent(botonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botonAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImage1Layout.createSequentialGroup()
                                        .addComponent(botonQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textoMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(botonQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void recargarTabla(){
        tablaArticuloDisponibles.setModel(TablaUtils.recargarTabla(columnas, db.listarArticulosEnStock()));
    }
    
    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        int articuloId = 0, cantidad = 0;
        
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaArticulosAgregados.getModel();
        Articulo articulo = new Articulo();
                
        if(tablaArticuloDisponibles.getSelectedRow()+1 > 0) {           
            try {
                int filaSeleccionada = tablaArticuloDisponibles.getSelectedRow();
                articuloId = Integer.parseInt(tablaArticuloDisponibles.getValueAt(filaSeleccionada, 0).toString());
                int cantidadCopia;
                float total, totalAcumulado = 0;
                cantidad = Integer.parseInt(JOptionPane.showInputDialog("Ingrese "
                        + "la cantidad de articulos para vender"));
                resultSet = db.consultarArticulo(articuloId);
                if(resultSet.next()){
                    cantidadCopia = resultSet.getInt("Cantidad");
                    
                    if(cantidad>cantidadCopia){
                        while(cantidad>cantidadCopia){
                            cantidad=Integer.parseInt(JOptionPane.showInputDialog("Ingrese una cantidad de articulos menor"));
                        }
                    }
                    articulo.setId_Articulo(resultSet.getInt("Id_Articulo"));
                    articulo.setNombre(resultSet.getString("Nombre"));
                    articulo.setPrecio(resultSet.getFloat("Precio"));
                    articulo.setCantidad(resultSet.getInt("Cantidad"));
                    
                    double preciodouble = Double.parseDouble(String.valueOf(articulo.getPrecio()));
                    double res = preciodouble*cantidad;
                    total = Float.parseFloat(String.valueOf(res));
                    Object o[] = {articulo.getId_Articulo(),articulo.getNombre(),total,cantidad};
                    modeloTabla.addRow(o);
                    
                    int fila = 0;
                    double monto = 0;
                    while (fila < tablaArticulosAgregados.getRowCount()){
                        monto = monto + Double.parseDouble(tablaArticulosAgregados.getValueAt(fila, 2).toString());
                        fila=fila+1;
                    }
                    totalAcumulado = Float.parseFloat(String.valueOf(monto));
                    textoMontoTotal.setText(String.valueOf(totalAcumulado));
                    
                    db.actualizarStockCompra(articulo.getId_Articulo(),cantidad);
                }   recargarTabla();
            } catch (SQLException ex) {
                Logger.getLogger(CompraInicial.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void botonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSiguienteActionPerformed
        if(tablaArticulosAgregados.getRowCount()>0){
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaArticulosAgregados.getModel();
            CompraFinal jCompraFinal = new CompraFinal(modeloTabla);
            jCompraFinal.setVisible(true);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(panelImage1, "Debe seleccionar por lo menos un articulo");
        }
    }//GEN-LAST:event_botonSiguienteActionPerformed

    private void botonQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonQuitarActionPerformed
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaArticuloDisponibles.getModel();
        
        int articuloId=0,cantidad=0;
        
        if(tablaArticulosAgregados.getSelectedRow()+1>0){       
            
            float total;
            int filaSeleccionada = tablaArticulosAgregados.getSelectedRow();      
            
            articuloId = Integer.parseInt(tablaArticulosAgregados.getValueAt(filaSeleccionada, 0).toString()); 
            cantidad = Integer.parseInt(tablaArticulosAgregados.getValueAt(filaSeleccionada, 3).toString());
            total = Float.parseFloat(tablaArticulosAgregados.getValueAt(filaSeleccionada, 2).toString());
            DefaultTableModel temp2 = (DefaultTableModel) tablaArticulosAgregados.getModel();
            temp2.removeRow(filaSeleccionada);
            
            db.actualizarCantidadQuitar(articuloId, cantidad);
            textoMontoTotal.setText(String.valueOf(Float.parseFloat(textoMontoTotal.getText()) - total));
            

            this.recargarTabla();
        }
    }//GEN-LAST:event_botonQuitarActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        int i = JOptionPane.showConfirmDialog(panelImage1, "¿Está seguro que desea cancelar la compra?", "Cancelar compra", 0);
        if(i==0){
            DefaultTableModel modeloTabla = (DefaultTableModel) tablaArticuloDisponibles.getModel();
            
            int aticuloId=0,cantidad=0;
            
            for(int c = 0; c < tablaArticulosAgregados.getRowCount(); c++){       
                
                float total;    
                
                aticuloId = Integer.parseInt(tablaArticulosAgregados.getValueAt(c, 0).toString()); 
                cantidad = Integer.parseInt(tablaArticulosAgregados.getValueAt(c, 3).toString());
                total = Float.parseFloat(tablaArticulosAgregados.getValueAt(c, 2).toString());
                
                DefaultTableModel modeloTabla2 = (DefaultTableModel) tablaArticulosAgregados.getModel();
                modeloTabla2.removeRow(c);

                db.actualizarCantidadQuitar(aticuloId,cantidad);
                textoMontoTotal.setText(String.valueOf(Float.parseFloat(textoMontoTotal.getText())-total));

            }
            PanelPrincipal pp = new PanelPrincipal();
            pp.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void textoNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textoNombreKeyReleased
        String nombre = textoNombre.getText();
        tablaArticuloDisponibles.setModel(TablaUtils.recargarTabla(columnas, db.listarArticulosFiltroEnStock(nombre)));
    }//GEN-LAST:event_textoNombreKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonQuitar;
    private javax.swing.JButton botonSiguiente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.edisoncor.gui.panel.Panel panel1;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private javax.swing.JTable tablaArticuloDisponibles;
    private javax.swing.JTable tablaArticulosAgregados;
    private javax.swing.JTextField textoMontoTotal;
    private javax.swing.JTextField textoNombre;
    // End of variables declaration//GEN-END:variables
}
